/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Message } from "./utils/message";
export namespace Components {
    interface AppGameTicTacToe {
        "broadcastGameUpdateCallback": (gameUpdate: any) => void;
        "gameUpdate": { type: 'move' | 'update', update: [number, number] | { gameBoard: string[][], nextPlayer: string, winner?: string } };
        "isHost": boolean;
        "notifyMoveCallback": (coordinate: [number, number]) => void;
    }
    interface AppHome {
        "connectToPeerCallback": (peerId: string) => void;
        "createPeerCallback": (peerId: string) => void;
        "currentGame": string;
        "gameUpdate": { type: 'move' | 'update', update: any };
        "hostId": string;
        "peerId": string;
        "sendMessageCallback": (message: Message) => void;
        "updateCurrentGame": (game: string) => void;
    }
    interface AppRoot {
    }
}
declare global {
    interface HTMLAppGameTicTacToeElement extends Components.AppGameTicTacToe, HTMLStencilElement {
    }
    var HTMLAppGameTicTacToeElement: {
        prototype: HTMLAppGameTicTacToeElement;
        new (): HTMLAppGameTicTacToeElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLElementTagNameMap {
        "app-game-tic-tac-toe": HTMLAppGameTicTacToeElement;
        "app-home": HTMLAppHomeElement;
        "app-root": HTMLAppRootElement;
    }
}
declare namespace LocalJSX {
    interface AppGameTicTacToe {
        "broadcastGameUpdateCallback"?: (gameUpdate: any) => void;
        "gameUpdate"?: { type: 'move' | 'update', update: [number, number] | { gameBoard: string[][], nextPlayer: string, winner?: string } };
        "isHost"?: boolean;
        "notifyMoveCallback"?: (coordinate: [number, number]) => void;
    }
    interface AppHome {
        "connectToPeerCallback"?: (peerId: string) => void;
        "createPeerCallback"?: (peerId: string) => void;
        "currentGame"?: string;
        "gameUpdate"?: { type: 'move' | 'update', update: any };
        "hostId"?: string;
        "peerId"?: string;
        "sendMessageCallback"?: (message: Message) => void;
        "updateCurrentGame"?: (game: string) => void;
    }
    interface AppRoot {
    }
    interface IntrinsicElements {
        "app-game-tic-tac-toe": AppGameTicTacToe;
        "app-home": AppHome;
        "app-root": AppRoot;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-game-tic-tac-toe": LocalJSX.AppGameTicTacToe & JSXBase.HTMLAttributes<HTMLAppGameTicTacToeElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
        }
    }
}
